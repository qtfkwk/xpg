/*!

xkcd-style password generator

*/

use anyhow::Result;
use rand::seq::SliceRandom;
use rand::thread_rng;
use rand::Rng;
use separator::Separatable;
use std::fmt::Write;

#[cfg(test)]
mod tests;

/**

Generate xkcd-style password with the given or default number of words (4).

*/
#[macro_export]
macro_rules! xpg {
    ($words: expr) => {
        xpg($words)
    };
    () => {
        xpg(4)
    }; // default: 4 words
}

pub const DIGITS: &str = "0123456789";
pub const SYMBOLS: &str = "~!@#$%^&*-_=+;:,./?()[]{}<>";
pub const LOWERCASE: &str = "abcdefghijklmnopqrstuvwxyz";
pub const UPPERCASE: &str = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";

pub const ALL: &str = "\
abcdefghijklmnopqrstuvwxyz\
ABCDEFGHIJKLMNOPQRSTUVWXYZ\
0123456789\
~!@#$%^&*-_=+;:,./?()[]{}<>\
";

pub const WORDLIST: [&str; 1259] = [
    "Africa",
    "Alabama",
    "Alaska",
    "America",
    "Amsterdam",
    "April",
    "Arizona",
    "Asia",
    "Athens",
    "August",
    "Australia",
    "Austria",
    "Barbados",
    "Belfast",
    "Belgium",
    "Berlin",
    "Botswana",
    "Brazil",
    "Britain",
    "British",
    "Bulgaria",
    "California",
    "Canada",
    "Chile",
    "China",
    "Colombia",
    "Congo",
    "Copenhagen",
    "Cuba",
    "Damascus",
    "December",
    "Delaware",
    "Denmark",
    "Dublin",
    "Earth",
    "Egypt",
    "England",
    "English",
    "Europe",
    "February",
    "Fiji",
    "Finland",
    "Florida",
    "France",
    "French",
    "Friday",
    "Germany",
    "Gibraltar",
    "Greece",
    "Greek",
    "Havana",
    "Hawaii",
    "Holland",
    "Iceland",
    "India",
    "Indian",
    "Ireland",
    "Italy",
    "Jamaica",
    "Japan",
    "Japanese",
    "Jerusalem",
    "Jordan",
    "July",
    "June",
    "Jupiter",
    "Kentucky",
    "Kenya",
    "Korea",
    "Lisbon",
    "London",
    "Madrid",
    "Malta",
    "March",
    "Mark",
    "Mars",
    "Maryland",
    "Mercury",
    "Mexico",
    "Monday",
    "Montana",
    "Moon",
    "Moscow",
    "Nepal",
    "Neptune",
    "Netherlands",
    "Nevada",
    "Norway",
    "November",
    "October",
    "Ohio",
    "Oslo",
    "Panama",
    "Paris",
    "Peru",
    "Pluto",
    "Poland",
    "Portugal",
    "Rome",
    "Russia",
    "Saturday",
    "Saturn",
    "Scotland",
    "September",
    "Singapore",
    "Spain",
    "Sunday",
    "Sweden",
    "Texas",
    "Tokyo",
    "Tuesday",
    "Uranus",
    "Venus",
    "Vermont",
    "Virginia",
    "Wales",
    "Warsaw",
    "Washington",
    "Wednesday",
    "Able",
    "About",
    "Above",
    "Across",
    "Action",
    "Actually",
    "Addition",
    "Adjective",
    "Advance",
    "Afraid",
    "After",
    "Again",
    "Against",
    "Agree",
    "Agreed",
    "Ahead",
    "Airplane",
    "Allow",
    "Almost",
    "Alone",
    "Along",
    "Already",
    "Also",
    "Although",
    "Always",
    "Among",
    "Amount",
    "Anger",
    "Angle",
    "Angry",
    "Animal",
    "Another",
    "Answer",
    "Anything",
    "Appear",
    "Apple",
    "Area",
    "Arms",
    "Army",
    "Around",
    "Arrive",
    "Arrived",
    "Article",
    "Attempt",
    "Aunt",
    "Away",
    "Baby",
    "Back",
    "Ball",
    "Bank",
    "Banker",
    "Base",
    "Basket",
    "Battle",
    "Bean",
    "Bear",
    "Beat",
    "Beautiful",
    "Beauty",
    "Became",
    "Because",
    "Become",
    "Been",
    "Before",
    "Began",
    "Begin",
    "Behind",
    "Being",
    "Believe",
    "Bell",
    "Belong",
    "Below",
    "Beside",
    "Best",
    "Better",
    "Between",
    "Beyond",
    "Bicycle",
    "Bill",
    "Bird",
    "Birds",
    "Black",
    "Block",
    "Blood",
    "Blow",
    "Blue",
    "Board",
    "Boat",
    "Body",
    "Bone",
    "Bones",
    "Book",
    "Born",
    "Borrow",
    "Both",
    "Bottle",
    "Bottom",
    "Branch",
    "Branches",
    "Bread",
    "Break",
    "Bridge",
    "Bright",
    "Bring",
    "Broad",
    "Broke",
    "Broken",
    "Brother",
    "Brought",
    "Brown",
    "Build",
    "Building",
    "Built",
    "Burn",
    "Burning",
    "Business",
    "Busy",
    "Butter",
    "Cake",
    "Call",
    "Came",
    "Cannot",
    "Capital",
    "Captain",
    "Care",
    "Carefully",
    "Carry",
    "Case",
    "Catch",
    "Cattle",
    "Caught",
    "Cause",
    "Cells",
    "Cent",
    "Center",
    "Cents",
    "Century",
    "Certain",
    "Chair",
    "Chance",
    "Change",
    "Character",
    "Charge",
    "Chart",
    "Check",
    "Chief",
    "Child",
    "Childhood",
    "Children",
    "Choose",
    "Church",
    "Cigarette",
    "Circle",
    "City",
    "Class",
    "Clean",
    "Clear",
    "Climbed",
    "Clock",
    "Close",
    "Cloth",
    "Clothes",
    "Cloud",
    "Coast",
    "Coat",
    "Cold",
    "College",
    "Color",
    "Colour",
    "Column",
    "Come",
    "Common",
    "Company",
    "Compare",
    "Complete",
    "Compound",
    "Condition",
    "Conditions",
    "Consider",
    "Considerable",
    "Consonant",
    "Contain",
    "Continue",
    "Continued",
    "Control",
    "Cook",
    "Cool",
    "Copy",
    "Corn",
    "Corner",
    "Correct",
    "Cost",
    "Cotton",
    "Could",
    "Count",
    "Country",
    "Course",
    "Cover",
    "Covered",
    "Cows",
    "Create",
    "Cried",
    "Crops",
    "Cross",
    "Crowd",
    "Current",
    "Daily",
    "Dance",
    "Dare",
    "Dark",
    "Date",
    "Daughter",
    "Dead",
    "Deal",
    "Dear",
    "Death",
    "Decide",
    "Decided",
    "Decimal",
    "Deep",
    "Degree",
    "Delight",
    "Demand",
    "Describe",
    "Desert",
    "Design",
    "Desire",
    "Destroy",
    "Details",
    "Determine",
    "Developed",
    "Device",
    "Dictionary",
    "Died",
    "Difference",
    "Different",
    "Difficult",
    "Dinner",
    "Direct",
    "Direction",
    "Discover",
    "Discovered",
    "Dish",
    "Distance",
    "Distant",
    "Divide",
    "Divided",
    "Division",
    "Doctor",
    "Does",
    "Dollar",
    "Dollars",
    "Done",
    "Door",
    "Double",
    "Doubt",
    "Down",
    "Draw",
    "Drawing",
    "Dream",
    "Dress",
    "Dried",
    "Drink",
    "Drive",
    "Drop",
    "Duck",
    "During",
    "Dusk",
    "Duty",
    "Each",
    "Early",
    "Ears",
    "Earth",
    "East",
    "Easy",
    "Edge",
    "Effect",
    "Effort",
    "Eggs",
    "Eight",
    "Either",
    "Electric",
    "Electricity",
    "Elements",
    "Else",
    "Enemy",
    "Energy",
    "Engine",
    "Enjoy",
    "Enough",
    "Enter",
    "Entered",
    "Entire",
    "Equal",
    "Equation",
    "Escape",
    "Especially",
    "Etching",
    "Even",
    "Evening",
    "Ever",
    "Every",
    "Everyone",
    "Everything",
    "Exactly",
    "Example",
    "Except",
    "Exciting",
    "Exercise",
    "Expect",
    "Experience",
    "Experiment",
    "Explain",
    "Express",
    "Face",
    "Fact",
    "Factories",
    "Factors",
    "Fail",
    "Fair",
    "Fall",
    "Family",
    "Famous",
    "Fancy",
    "Farm",
    "Farmers",
    "Fast",
    "Father",
    "Favor",
    "Fear",
    "Feed",
    "Feel",
    "Feeling",
    "Feet",
    "Fell",
    "Fellow",
    "Felt",
    "Fence",
    "Field",
    "Fifteen",
    "Fifth",
    "Fifty",
    "Fight",
    "Figure",
    "Fill",
    "Filled",
    "Finally",
    "Find",
    "Fine",
    "Finger",
    "Fingers",
    "Finish",
    "Finished",
    "Fire",
    "Firm",
    "First",
    "Fish",
    "Five",
    "Flat",
    "Flier",
    "Floor",
    "Flow",
    "Flower",
    "Flowers",
    "Follow",
    "Food",
    "Fool",
    "Foot",
    "Force",
    "Foreign",
    "Forest",
    "Forever",
    "Forget",
    "Form",
    "Fortieth",
    "Forty",
    "Forward",
    "Found",
    "Four",
    "Fraction",
    "Free",
    "Fresh",
    "Friend",
    "Friends",
    "From",
    "Front",
    "Fruit",
    "Full",
    "Further",
    "Future",
    "Gain",
    "Galaxy",
    "Game",
    "Garden",
    "Gate",
    "Gather",
    "Gave",
    "General",
    "Gentle",
    "Gentleman",
    "Gift",
    "Girl",
    "Give",
    "Gives",
    "Glad",
    "Glass",
    "Glossary",
    "Goes",
    "Gold",
    "Gone",
    "Good",
    "Goodbye",
    "Govern",
    "Government",
    "Grain",
    "Grass",
    "Grave",
    "Gray",
    "Great",
    "Green",
    "Grew",
    "Ground",
    "Group",
    "Grow",
    "Grown",
    "Guard",
    "Guess",
    "Guide",
    "Hair",
    "Half",
    "Hall",
    "Halt",
    "Hand",
    "Hang",
    "Happen",
    "Happened",
    "Happy",
    "Hard",
    "Have",
    "Head",
    "Health",
    "Hear",
    "Heard",
    "Heart",
    "Heat",
    "Heaven",
    "Heavy",
    "Height",
    "Held",
    "Hello",
    "Help",
    "Here",
    "Hers",
    "High",
    "Hill",
    "Himself",
    "History",
    "Hold",
    "Hole",
    "Home",
    "Honor",
    "Hope",
    "Horse",
    "Hour",
    "Hours",
    "House",
    "However",
    "Huge",
    "Human",
    "Hundred",
    "Hunger",
    "Hunt",
    "Hunting",
    "Hurry",
    "Hurt",
    "Husband",
    "Idea",
    "Important",
    "Inch",
    "Inches",
    "Include",
    "Increase",
    "Indeed",
    "Indicate",
    "Industry",
    "Information",
    "Insects",
    "Inside",
    "Instead",
    "Instruments",
    "Interest",
    "Into",
    "Iron",
    "Island",
    "Itself",
    "Join",
    "Joined",
    "Journey",
    "Judge",
    "Jump",
    "Jumped",
    "Just",
    "Keep",
    "Kept",
    "Kill",
    "Killed",
    "Kind",
    "King",
    "Kiss",
    "Kitchen",
    "Knew",
    "Know",
    "Known",
    "Labor",
    "Ladder",
    "Lady",
    "Lake",
    "Land",
    "Language",
    "Large",
    "Last",
    "Late",
    "Later",
    "Laugh",
    "Laughed",
    "Laughter",
    "Lead",
    "Leader",
    "Learn",
    "Least",
    "Leave",
    "Left",
    "Legs",
    "Lend",
    "Length",
    "Less",
    "Letter",
    "Level",
    "Liar",
    "Life",
    "Lift",
    "Lifted",
    "Light",
    "Like",
    "Likely",
    "Line",
    "List",
    "Listen",
    "Little",
    "Live",
    "Located",
    "Lone",
    "Long",
    "Look",
    "Lord",
    "Lose",
    "Loss",
    "Lost",
    "Loud",
    "Love",
    "Lower",
    "Machine",
    "Made",
    "Mail",
    "Main",
    "Major",
    "Make",
    "Manner",
    "Many",
    "March",
    "Mark",
    "Market",
    "Marry",
    "Master",
    "Match",
    "Material",
    "Matter",
    "Maybe",
    "Mayor",
    "Mean",
    "Measure",
    "Meat",
    "Meet",
    "Meeting",
    "Melody",
    "Member",
    "Members",
    "Metal",
    "Method",
    "Middle",
    "Might",
    "Mile",
    "Milk",
    "Million",
    "Mind",
    "Mine",
    "Minute",
    "Minutes",
    "Miss",
    "Mister",
    "Modern",
    "Molecules",
    "Moment",
    "Money",
    "Month",
    "Months",
    "Moon",
    "More",
    "Morning",
    "Most",
    "Mother",
    "Mountain",
    "Mouth",
    "Move",
    "Movement",
    "Much",
    "Music",
    "Must",
    "Nail",
    "Name",
    "Nation",
    "Natural",
    "Nature",
    "Near",
    "Nearly",
    "Necessary",
    "Neck",
    "Need",
    "Needle",
    "Neighbor",
    "Neither",
    "Nerve",
    "Never",
    "News",
    "Next",
    "Nice",
    "Niece",
    "Night",
    "Nine",
    "Noise",
    "None",
    "Noon",
    "North",
    "Northern",
    "Nose",
    "Note",
    "Nothing",
    "Notice",
    "Noun",
    "Number",
    "Numeral",
    "Object",
    "Observe",
    "Ocean",
    "Offer",
    "Office",
    "Often",
    "Once",
    "Only",
    "Open",
    "Opinion",
    "Opposite",
    "Order",
    "Orderly",
    "Other",
    "Ought",
    "Outer",
    "Outside",
    "Over",
    "Oxygen",
    "Page",
    "Paid",
    "Pain",
    "Paint",
    "Pair",
    "Paper",
    "Paragraph",
    "Park",
    "Part",
    "Partial",
    "Particular",
    "Party",
    "Pass",
    "Passed",
    "Past",
    "Pattern",
    "Peace",
    "People",
    "Perfect",
    "Perhaps",
    "Period",
    "Person",
    "Phrase",
    "Pick",
    "Picked",
    "Picture",
    "Piece",
    "Place",
    "Plain",
    "Plains",
    "Plan",
    "Plane",
    "Planet",
    "Plant",
    "Plants",
    "Play",
    "Pleasant",
    "Please",
    "Pleasure",
    "Plural",
    "Poem",
    "Point",
    "Pole",
    "Poor",
    "Position",
    "Possible",
    "Pounds",
    "Power",
    "Practice",
    "Prepare",
    "Prepared",
    "Present",
    "President",
    "Presidents",
    "Press",
    "Pretty",
    "Price",
    "Printed",
    "Probable",
    "Probably",
    "Problem",
    "Process",
    "Produce",
    "Products",
    "Promise",
    "Property",
    "Proud",
    "Prove",
    "Provide",
    "Public",
    "Pull",
    "Pulled",
    "Pure",
    "Push",
    "Pushed",
    "Quarter",
    "Queen",
    "Question",
    "Questions",
    "Quick",
    "Quickly",
    "Quiet",
    "Quite",
    "Race",
    "Radio",
    "Rain",
    "Raise",
    "Raised",
    "Rather",
    "Reach",
    "Reached",
    "Read",
    "Ready",
    "Real",
    "Realize",
    "Really",
    "Reason",
    "Receive",
    "Received",
    "Record",
    "Region",
    "Remain",
    "Remember",
    "Repeated",
    "Reply",
    "Report",
    "Represent",
    "Require",
    "Resent",
    "Rest",
    "Result",
    "Return",
    "Rhythm",
    "Rich",
    "Ridden",
    "Ride",
    "Right",
    "Ring",
    "Rise",
    "River",
    "Road",
    "Rock",
    "Roll",
    "Rolled",
    "Room",
    "Root",
    "Rope",
    "Rose",
    "Round",
    "Rule",
    "Rush",
    "Safe",
    "Safety",
    "Said",
    "Sail",
    "Salt",
    "Same",
    "Sand",
    "Save",
    "Says",
    "Scale",
    "Scene",
    "School",
    "Science",
    "Scientists",
    "Score",
    "Season",
    "Seat",
    "Second",
    "Section",
    "Seed",
    "Seeds",
    "Seem",
    "Seen",
    "Self",
    "Sell",
    "Send",
    "Sense",
    "Sent",
    "Sentence",
    "Separate",
    "Serve",
    "Service",
    "Settle",
    "Settled",
    "Seven",
    "Several",
    "Shade",
    "Shake",
    "Shall",
    "Shape",
    "Share",
    "Sharp",
    "Shine",
    "Ship",
    "Shirt",
    "Shoe",
    "Shoes",
    "Shop",
    "Shore",
    "Short",
    "Shot",
    "Should",
    "Shoulder",
    "Shout",
    "Shouted",
    "Show",
    "Shown",
    "Sick",
    "Side",
    "Sight",
    "Sign",
    "Signal",
    "Silent",
    "Silver",
    "Similar",
    "Simple",
    "Since",
    "Sing",
    "Single",
    "Sister",
    "Size",
    "Skin",
    "Sleep",
    "Slept",
    "Slow",
    "Slowly",
    "Small",
    "Smell",
    "Smiled",
    "Smoke",
    "Snow",
    "Soft",
    "Soil",
    "Sold",
    "Soldier",
    "Soldiers",
    "Solution",
    "Some",
    "Someone",
    "Something",
    "Sometimes",
    "Song",
    "Soon",
    "Sorry",
    "Sort",
    "Sound",
    "South",
    "Southern",
    "Space",
    "Speak",
    "Special",
    "Speed",
    "Spell",
    "Spend",
    "Spent",
    "Spoke",
    "Spot",
    "Spread",
    "Spring",
    "Square",
    "Stand",
    "Star",
    "Stars",
    "Start",
    "State",
    "Statement",
    "Station",
    "Stay",
    "Steel",
    "Step",
    "Stick",
    "Still",
    "Stock",
    "Stone",
    "Stood",
    "Stop",
    "Store",
    "Storm",
    "Story",
    "Straight",
    "Strange",
    "Stranger",
    "Stream",
    "Street",
    "Strength",
    "Stretched",
    "Strike",
    "String",
    "Strong",
    "Student",
    "Students",
    "Study",
    "Subject",
    "Substances",
    "Succeed",
    "Success",
    "Such",
    "Sudden",
    "Suddenly",
    "Suffer",
    "Suffix",
    "Sugar",
    "Suggested",
    "Suit",
    "Summer",
    "Supply",
    "Suppose",
    "Sure",
    "Surface",
    "Surprise",
    "Sweet",
    "Swim",
    "Syllables",
    "Symbols",
    "System",
    "Table",
    "Tail",
    "Take",
    "Taken",
    "Talk",
    "Tall",
    "Taste",
    "Teach",
    "Teacher",
    "Team",
    "Tear",
    "Tell",
    "Temperature",
    "Terms",
    "Test",
    "Than",
    "Thank",
    "That",
    "Their",
    "Them",
    "Themselves",
    "Then",
    "There",
    "Therefore",
    "These",
    "They",
    "Thick",
    "Thin",
    "Thing",
    "Think",
    "Third",
    "Thirteen",
    "This",
    "Those",
    "Though",
    "Thought",
    "Thousand",
    "Thousands",
    "Three",
    "Threw",
    "Through",
    "Throw",
    "Thrown",
    "Thus",
    "Tied",
    "Till",
    "Time",
    "Tiny",
    "Today",
    "Together",
    "Told",
    "Tomorrow",
    "Tone",
    "Took",
    "Tools",
    "Tore",
    "Total",
    "Touch",
    "Toward",
    "Town",
    "Track",
    "Trade",
    "Train",
    "Training",
    "Travel",
    "Tree",
    "Triangle",
    "Tried",
    "Tries",
    "Trip",
    "Trouble",
    "Truck",
    "True",
    "Trust",
    "Tube",
    "Turn",
    "Twelve",
    "Twenty",
    "Type",
    "Uncle",
    "Under",
    "Underline",
    "Understand",
    "Understood",
    "Unit",
    "Until",
    "Upon",
    "Usual",
    "Usually",
    "Valley",
    "Value",
    "Various",
    "Verb",
    "Very",
    "View",
    "Village",
    "Visit",
    "Voice",
    "Vowel",
    "Wagon",
    "Wait",
    "Walk",
    "Wall",
    "Want",
    "Wants",
    "Warm",
    "Wash",
    "Watch",
    "Water",
    "Wave",
    "Waves",
    "Weak",
    "Wear",
    "Weather",
    "Wedge",
    "Week",
    "Weight",
    "Welcome",
    "Well",
    "Went",
    "Were",
    "West",
    "Western",
    "What",
    "Wheat",
    "Wheel",
    "Wheels",
    "When",
    "Where",
    "Whether",
    "Which",
    "While",
    "White",
    "Whole",
    "Whom",
    "Whose",
    "Wide",
    "Wife",
    "Wild",
    "Will",
    "Wind",
    "Window",
    "Wing",
    "Wings",
    "Winter",
    "Wire",
    "Wise",
    "Wish",
    "With",
    "Within",
    "Without",
    "Woman",
    "Women",
    "Wonder",
    "Wood",
    "Word",
    "Wore",
    "Work",
    "Workers",
    "World",
    "Worn",
    "Worth",
    "Would",
    "Write",
    "Written",
    "Wrong",
    "Wrote",
    "Yard",
    "Year",
    "Yellow",
    "Yesterday",
    "Young",
    "Your",
    "Yourself",
];

/**

Generate xkcd-style password with a specified number of words.

`words` must be at least one or it will panic.

*/
pub fn xpg(words: usize) -> String {
    if words < 1 {
        panic!();
    }
    WORDLIST
        .choose_multiple(&mut thread_rng(), words)
        .cloned()
        .collect::<Vec<&str>>()
        .join("")
}

/**

Generate xkcd-style password with a specified number of words and append random digits, symbols,
lowercase, uppercase and/or any characters.

*/
pub fn xpg_plus(
    words: usize,
    digits: usize,
    symbols: usize,
    lc: usize,
    uc: usize,
    any: usize,
) -> String {
    if words > 0 {
        format!(
            "{}{}{}{}{}{}",
            xpg(words),
            random_str(digits, DIGITS),
            random_str(symbols, SYMBOLS),
            random_str(lc, LOWERCASE),
            random_str(uc, UPPERCASE),
            random_str(any, ALL),
        )
    } else {
        random_str(any, ALL)
    }
}

/**

Generate a random string of length `n` from `alphabet`

*/
pub fn random_str(n: usize, alphabet: &str) -> String {
    let alphabet = alphabet.chars().collect::<Vec<char>>();
    let len = alphabet.len();
    let mut r = String::new();
    for _ in 0..n {
        r.push(alphabet[thread_rng().gen_range(0..len)]);
    }
    r
}

/**

Generate a "Keychain-style" password like `nfucns-gnOcap-utpw9r`

*/
pub fn keychain() -> String {
    let mut rng = thread_rng();
    let mut words = [
        random_str(6, LOWERCASE),
        format!("{}{}", random_str(5, LOWERCASE), random_str(1, DIGITS),),
        format!("{}{}", random_str(5, LOWERCASE), random_str(1, UPPERCASE),),
    ]
    .iter()
    .map(|x| {
        let mut x = x.chars().collect::<Vec<char>>();
        x.shuffle(&mut rng);
        x.into_iter().collect()
    })
    .collect::<Vec<String>>();
    words.shuffle(&mut rng);
    words.join("-")
}

/**

Generate a "code name" like `BLUE STEEL`

*/
pub fn code_name() -> String {
    WORDLIST
        .choose_multiple(&mut thread_rng(), 2)
        .map(|x| x.to_uppercase())
        .collect::<Vec<String>>()
        .join(" ")
}

/**

Calculate permutations without repetition

`P(n, k) = n! / (n - k)!`

https://en.wikipedia.org/wiki/Permutation#k-permutations_of_n

*/
pub fn permutations(mut n: u128, mut k: u128) -> u128 {
    let mut p = n;
    k -= 1;
    while k > 0 {
        n -= 1;
        p *= n;
        k -= 1;
    }
    p
}

/**

Generate a report of the possible permutations of passwords with a given number of words

*/
pub fn analyze(words: usize) -> Result<String> {
    let n = WORDLIST.len() as u128;
    let w = words as u128;
    let d = n - w;
    let p = permutations(n, w);
    let n_ = n.separated_string();
    let w_ = words.separated_string();
    let d_ = d.separated_string();
    let p_ = p.separated_string();
    let mut r = format!(
        "\
* Word list length: {n_}
* Words in password: {w_}
* Total permutations (without repetition): {p_}

    ```
    {n_}! / ({n_} - {w})!
    {n_}! / {d_}!
    {p_}
    ```

Words | Permutations
---|---:
\
        "
    );
    let (mut n, mut k, mut p) = (n, 1, permutations(n, 1));
    while k <= 8 {
        let p_ = p.separated_string();
        writeln!(r, "{k} | {p_}")?;
        n -= 1;
        k += 1;
        p *= n;
    }
    writeln!(r, "... | ...\n")?;
    Ok(r)
}
